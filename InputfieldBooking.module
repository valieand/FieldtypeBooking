<?php

/**
* InputfieldBooking for ProcessWire.
*
* This Inputfield is a GUI for FieldtypeBooking.
*
* @author Kongondo <kongondo@gmail.com>
* @sponsored by Andrey Valiev
*
* Lincensed under GNU/GPL v2.
*
* https://github.com/kongondo/FieldtypeBooking
* Created September 2015
*
* ProcessWire 2.x
* Copyright (C) 2011 by Ryan Cramer
* Licensed under GNU/GPL v2, see LICENSE.TXT
*
* http://www.processwire.com
*
*/

class InputfieldBooking extends Inputfield
{
	public static function getModuleInfo()
    {
		return array(
            'title'    => 'Booking',
            'author'   => 'Kongondo',
            'version'  => 001,
            'href'     => 'https://processwire.com/talk/topic/',
            'summary'  => 'Inputfield for simple custom Ajax-driven 2-week booking calendar with pre-defined date-time slots.',
            'requires' => 'FieldtypeBooking',
		);
	}

	/**
	* Outputs javascript configuration value for include children feature.
	*
	* @access protected
	* @return string $scripts.
	*
	*/
	protected function ajaxConfigs()
    {
		//making sure only in admin
		$process = $this->wire('process');
		if($process && $process->className() == 'ProcessPageEdit') $p = $process->getPage();

		$ajaxURL = $this->getAjaxURL($this->ajaxURL);

		//options for ajax calls
		$options = array(
            'config' => array(
                'pageID'     => $p->id,
                'ajaxURL'    => $ajaxURL,
                'fieldName'  => $this->attr('name'),
                'dateFormat' => $this->dateFormat
            )
        );

		$scripts = $this->config->js($this->className(), $options);

		return $scripts;
	}

	/**
	* Returns a URL that will be used to handle this field's Ajax calls.
	*
	* @param int|string $url
	* @access protected
	* @return string $url.
	*
	*/
	protected function getAjaxURL($url='')
    {
		//if we got a page ID
		if (is_int($url) && $url)
        {
			$ajaxPage = wire('pages')->get($url);
			if($ajaxPage->id > 0) $url = $ajaxPage->url;
		}

		elseif (is_string($url) && strlen($url))
        {
			//if we got a ProcessWire URL
			if (preg_match('#^(\/)#', $url))
            {
				$ajaxPage = wire('pages')->get($this->sanitizer->pagePathName($url));
				if($ajaxPage->id > 0) $url = $ajaxPage->url;
			}

			//if we got a template name
			else
            {
				//we first check if we got a template name. if not, we assume the string we got is an external URL. In that case we don't need to sanitize it
				$t = wire('templates')->get($this->sanitizer->templateName($url));
				if(!is_null($t))
                {
					$ajaxPage = wire('pages')->get('template=' . $t);
					if($ajaxPage->id > 0) $url = $ajaxPage->url;
				}
			}
			//otherwise we assume given $url is an external URL
		}

		return $url;
	}

	/**
	 * Render the entire input area for a Booking Calendar
	 *
	 * @access public
	 * @return string
	 *
	 */
	public function ___render()
    {
		//check if ajaxURL present, it not, throw error
		if(!$this->getAjaxURL($this->ajaxURL))
        {
			#throw new WireException($this->_('Check your field\'s settings for handling Ajax calls'));
			$this->error($this->_('Check your field\'s settings for handling Ajax calls for your calendar below to work.'));
		}

		$this->ajaxConfigs();//output js configurations for our ajax scripts

		$value = $this->attr('value');//array of datetime/user pair. Should only contain these two items

		//we'll use this later below for displaying last saved datetime/user pair + for hihglighting in calendar last saved datetime
        $lastSavedDateTime = $value->date;//raw last saved datetime/timeslot (timestamp)
        $lastSavedUser     = $value->user;//last saved user

		//create an instance of Booking() class
		$b = new Booking();//class found in FieldtypeBooking.module file

		//@@note: DUMMY DATA FOR RETURNING calendar + availability from today for 2 weeks
		$calendar = $b->renderCalendar($lastSavedDateTime, $lastSavedUser, $this->dateFormat);

		return '<div id="booking_bookings">' . $calendar . '</div>';
	}

	/**
	 * Process input for the values sent from this field for saving to db
	 */
	public function ___processInput(WireInputData $input)
    {
		//nothing to do here really since our values are saved via ajax without an input field
	}


}

